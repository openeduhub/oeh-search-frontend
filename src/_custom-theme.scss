// This file was generated by running 'ng generate @angular/material:theme-color'.
// Proceed with caution if making changes to this file.
// Note: Color palettes are generated from primary: #003B7C, tertiary: #003B7C, neutral: #CACACA

@use 'sass:color';
@use 'sass:map';
@use '@angular/material' as mat;

$primary: #003b7c;
$primary-dark: #032850; // alternative for: color.scale($primary, $lightness: -(100% / 40) * 15),

// Adjustments:
// * entire primary + primary: 25, 40
// * neutral: 35 (#515353), 80 (#c6c6c6), 95 (#eef0fd), 98 (#f9f9ff), 99 (#fdfbff)
$_palettes: (
    primary: (
        0: #000000,
        10: color.scale($primary, $lightness: - calc((100% / 40) * 30)),
        20: color.scale($primary, $lightness: - calc((100% / 40) * 20)),
        25: $primary-dark,
        30: color.scale($primary, $lightness: - calc((100% / 40) * 10)),
        35: color.scale($primary, $lightness: - calc((100% / 40) * 5)),
        40: $primary,
        50: color.scale($primary, $lightness: calc((100% / 60) * 10)),
        60: color.scale($primary, $lightness: calc((100% / 60) * 20)),
        70: color.scale($primary, $lightness: calc((100% / 60) * 30)),
        80: color.scale($primary, $lightness: calc((100% / 60) * 40)),
        90: color.scale($primary, $lightness: calc((100% / 60) * 50)),
        95: color.scale($primary, $lightness: calc((100% / 60) * 55)),
        98: color.scale($primary, $lightness: calc((100% / 60) * 58)),
        99: color.scale($primary, $lightness: calc((100% / 60) * 59)),
        100: #ffffff,
    ),
    secondary: (
        0: #000000,
        10: #0c1b34,
        20: #22304a,
        25: #2e3c55,
        30: #394761,
        35: #45536e,
        40: #515f7a,
        50: #697794,
        60: #8391af,
        70: #9dabca,
        80: #b9c7e7,
        90: #d7e3ff,
        95: #ecf0ff,
        98: #f9f9ff,
        99: #fdfbff,
        100: #ffffff,
    ),
    tertiary: (
        0: #000000,
        10: #001b3f,
        20: #002f65,
        25: #003a7a,
        30: #154687,
        35: #255293,
        40: #345ea0,
        50: #4f77bb,
        60: #6991d7,
        70: #84acf3,
        80: #abc7ff,
        90: #d7e3ff,
        95: #ecf0ff,
        98: #f9f9ff,
        99: #fdfbff,
        100: #ffffff,
    ),
    neutral: (
        0: #000000,
        10: #1a1c1c,
        20: #2f3131,
        25: #3a3c3c,
        30: #464747,
        35: #545454,
        40: #5d5e5f,
        50: #767777,
        60: #909191,
        70: #ababab,
        80: #cacaca,
        90: #e3e2e2,
        95: #f1f0f0,
        98: #faf9f9,
        99: #f4f4f4,
        100: #ffffff,
        4: #0d0e0f,
        6: #121414,
        12: #1e2020,
        17: #292a2a,
        22: #333535,
        24: #38393a,
        87: #dadada,
        92: #e8e8e8,
        94: #eeeeee,
        96: #f4f3f3,
    ),
    neutral-variant: (
        0: #000000,
        10: #181c24,
        20: #2c3039,
        25: #373b45,
        30: #434750,
        35: #4e525c,
        40: #5a5e68,
        50: #737781,
        60: #8d909b,
        70: #a8abb6,
        80: #c3c6d2,
        90: #dfe2ee,
        95: #ececec,
        98: #f9f9ff,
        99: #fefefe,
        100: #ffffff,
    ),
    error: (
        0: #000000,
        10: #410002,
        20: #690005,
        25: #7e0007,
        30: #93000a,
        35: #a80710,
        40: #ba1a1a,
        50: #de3730,
        60: #ff5449,
        70: #ff897d,
        80: #ffb4ab,
        90: #ffdad6,
        95: #ffedea,
        98: #fff8f7,
        99: #fffbff,
        100: #ffffff,
    ),
);

$_rest: (
    secondary: map.get($_palettes, secondary),
    neutral: map.get($_palettes, neutral),
    neutral-variant: map.get($_palettes, neutral-variant),
    error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

@function _high-contrast-value($light, $dark, $theme-type) {
    @if ($theme-type == light) {
        @return $light;
    }
    @if ($theme-type == dark) {
        @return $dark;
    }
    @if ($theme-type == color-scheme) {
        @return light-dark(#{$light}, #{$dark});
    }

    @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
    @include mat.theme-overrides(
        (
            primary: _high-contrast-value(#002654, #ebf0ff, $theme-type),
            on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
            primary-container: _high-contrast-value(#003b7c, #a4c3ff, $theme-type),
            on-primary-container: _high-contrast-value(#ffffff, #000b21, $theme-type),
            inverse-primary: _high-contrast-value(#abc7ff, #174788, $theme-type),
            primary-fixed: _high-contrast-value(#194889, #d7e3ff, $theme-type),
            primary-fixed-dim: _high-contrast-value(#00316a, #abc7ff, $theme-type),
            on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
            on-primary-fixed-variant: _high-contrast-value(#ffffff, #00102c, $theme-type),
            secondary: _high-contrast-value(#1e2c45, #ebf0ff, $theme-type),
            on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
            secondary-container: _high-contrast-value(#3c4964, #b5c3e3, $theme-type),
            on-secondary-container: _high-contrast-value(#ffffff, #000b21, $theme-type),
            secondary-fixed: _high-contrast-value(#3c4964, #d7e3ff, $theme-type),
            secondary-fixed-dim: _high-contrast-value(#25334c, #b9c7e7, $theme-type),
            on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
            on-secondary-fixed-variant: _high-contrast-value(#ffffff, #021129, $theme-type),
            tertiary: _high-contrast-value(#002654, #ebf0ff, $theme-type),
            on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
            tertiary-container: _high-contrast-value(#003b7c, #a4c3ff, $theme-type),
            on-tertiary-container: _high-contrast-value(#ffffff, #000b21, $theme-type),
            tertiary-fixed: _high-contrast-value(#194889, #d7e3ff, $theme-type),
            tertiary-fixed-dim: _high-contrast-value(#00316a, #abc7ff, $theme-type),
            on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
            on-tertiary-fixed-variant: _high-contrast-value(#ffffff, #00102c, $theme-type),
            background: _high-contrast-value(#faf9f9, #121414, $theme-type),
            on-background: _high-contrast-value(#1a1c1c, #e3e2e2, $theme-type),
            surface: _high-contrast-value(#faf9f9, #121414, $theme-type),
            surface-dim: _high-contrast-value(#b8b9b9, #121414, $theme-type),
            surface-bright: _high-contrast-value(#faf9f9, #4f5050, $theme-type),
            surface-container-lowest: _high-contrast-value(#ffffff, #000000, $theme-type),
            surface-container: _high-contrast-value(#e3e2e2, #2f3131, $theme-type),
            surface-container-high: _high-contrast-value(#d4d4d4, #3a3c3c, $theme-type),
            surface-container-highest: _high-contrast-value(#c6c6c6, #464747, $theme-type),
            on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
            shadow: _high-contrast-value(#000000, #000000, $theme-type),
            scrim: _high-contrast-value(#000000, #000000, $theme-type),
            surface-tint: _high-contrast-value(#345ea0, #abc7ff, $theme-type),
            inverse-surface: _high-contrast-value(#2f3131, #e3e2e2, $theme-type),
            inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
            outline: _high-contrast-value(#282c35, #edeffc, $theme-type),
            outline-variant: _high-contrast-value(#454953, #bfc2ce, $theme-type),
            error: _high-contrast-value(#600004, #ffece9, $theme-type),
            on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
            error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
            on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
            surface-variant: _high-contrast-value(#dfe2ee, #434750, $theme-type),
            on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
        )
    );
}

$light-theme: mat.define-theme(
    (
        color: (
            theme-type: light,
            primary: $primary-palette,
            tertiary: $tertiary-palette,
        ),
        density: (
            scale: -1,
        ),
    )
);

$dark-theme: mat.define-theme(
    (
        color: (
            theme-type: dark,
            primary: $primary-palette,
            tertiary: $tertiary-palette,
        ),
        density: (
            scale: -1,
        ),
    )
);
