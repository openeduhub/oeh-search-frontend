@use '@angular/material' as mat;
@import '../../../additional-colors';
@import '../functions';

@mixin template-page-theme($theme) {
    app-template {
        .action-btn {
            @if mat.get-theme-type($theme) == light {
                color: mat.get-theme-color($theme, neutral, 35);
                background: mat.get-theme-color($theme, neutral, 99);
            } @else {
                color: mat.get-theme-color($theme, neutral, 99);
                background: mat.get-theme-color($theme, neutral, 35);
            }

            &.btn-modify {
                color: mat.get-theme-color($theme, on-primary);
                background: mat.get-theme-color($theme, primary);
            }
        }

        .reloading-indicator-bg {
            background: mat.get-theme-color($theme, surface);

            &.transparent-bg {
                background: rgba(mat.get-theme-color($theme, inverse-surface), 0.5);
            }
        }

        .breadcrumb-navbar-overflow-container {
            @if mat.get-theme-type($theme) == light {
                background: mat.get-theme-color($theme, neutral, 99);
            } @else {
                background: mat.get-theme-color($theme, neutral, 0);
            }
        }

        .template-breadcrumb {
            @if mat.get-theme-type($theme) == light {
                background: mat.get-theme-color($theme, primary, 25);
            } @else {
                background: mat.get-theme-color($theme, primary);
            }

            a,
            i,
            p {
                color: mat.get-theme-color($theme, on-primary) !important;
            }
        }

        .template-header-container,
        .portal-wrapper-left {
            background: mat.get-theme-color($theme, surface);
        }

        .wlo-swimlane {
            background-color: mat.get-theme-color($theme, surface-container-low);
        }

        .anchor-container .anchor-menu .anchor-item {
            .item-container {
                @if mat.get-theme-type($theme) == light {
                    background: mat.get-theme-color($theme, neutral, 99);
                } @else {
                    background: mat.get-theme-color($theme, neutral, 35);
                }
            }

            .total-count {
                color: mat.get-theme-color($theme, primary, 100);
                background-color: $pink-default;
            }
        }
    }
}

@mixin template-page-typography($theme) {
    // increase size of accordion caret icon
    .wlo-accordion-item-description {
        .mat-icon,
        .mat-mdc-icon {
            font-size: 1.875rem;
        }
    }

    // use medium font-size with reduced line-height
    .anchor-container .anchor-menu .anchor-item {
        .item-container {
            font-family: var(--sys-body-large-font);
            font-size: var(--sys-body-medium-size);
            line-height: var(--body-small-line-height);
        }

        .total-count {
            font-family: var(--sys-display-small-font);
            font-size: var(--body-extra-small-size);
            line-height: var(--body-small-line-height);
        }
    }
}
