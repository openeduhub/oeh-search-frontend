name: CI

on: push

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-image:
    name: Check for existing image
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      exists: ${{ steps.request-image-info.outcome == 'success' }}
    steps:
      - id: request-image-info
        run: curl --fail https://hub.docker.com/v2/repositories/${{ env.IMAGE_NAME }}/tags/${{ github.sha }}

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: check-image
    if: ${{ needs.check-image.outputs.exists == 'false' }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - uses: azure/docker-login@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Install dependencies
        run: npm ci
      - name: Build the project
        run: npm run build
      - name: Build Docker image
        run: docker build --tag ${{ github.repository }}:${{ github.sha }} .
      - name: Publish to DockerHub
        run: docker push ${{ github.repository }}:${{ github.sha }}

  tag-image-ref:
    name: Tag image to ref
    runs-on: ubuntu-latest
    needs: build-image
    if: ${{ success() || needs.build-image.result == 'skipped' }}
    steps:
      - uses: azure/docker-login@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}   
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Pull Docker image
        run: docker pull ${{ github.repository }}:${{ github.sha }} .
      - name: Tag Docker image
        run: docker tag ${{ github.repository }}:${{ github.sha }} ${{ github.repository }}:${{ env.GITHUB_REF_SLUG }}
      - name: Publish to DockerHub
        run: docker push ${{ github.repository }}:${{ env.GITHUB_REF_SLUG }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: check-image
    if: ${{ needs.check-image.outputs.exists == 'false' }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'    
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint